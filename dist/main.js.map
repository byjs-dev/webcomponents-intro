{"version":3,"file":"main.js","mappings":"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","sources":["webpack://@zepdev/webpack-use-webcomponent-lib/./src/js/routes.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/./src/js/navigation.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/templates/zButton.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/ZApp.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/utils/getCSSVar.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/templates/zFileUpload.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/templates/zInputContainer.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/ZLogo.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/../../src/ZMenuBar.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/./src/js/ZepH2.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/./src/js/ZepH3.mjs","webpack://@zepdev/webpack-use-webcomponent-lib/./src/index.js"],"sourcesContent":["export default ['/', '/basics.html', '/shadow-dom.html', '/templates-and-slots.html'];\n","import routes from './routes.mjs';\n\n// don't do that primitive stuff at work ;)\n\nexport default class Navigation {\n\n    static #elementListeners = [];\n\n    static next() {\n        const currentRoutesIndex = routes.indexOf(location.pathname);\n        if (currentRoutesIndex === -1) return;\n        const nextIndex = currentRoutesIndex === routes.length - 1 ? 0 : currentRoutesIndex + 1;\n        window.open(routes[nextIndex], '_self');\n    }\n\n    static prev() {\n        const currentRoutesIndex = routes.indexOf(location.pathname);\n        if (currentRoutesIndex === -1) return;\n        const prevIndex = currentRoutesIndex > 0 ? currentRoutesIndex - 1 : routes.length - 1;\n        window.open(routes[prevIndex], '_self');\n    }\n\n    static addListeners() {\n        Navigation.removeListeners();\n        window.addEventListener('keydown', Navigation.handleKeyDown);\n        document.querySelectorAll('[data-navigation]').forEach((element) => {\n            const listener = {element, event: 'click', callback: Navigation[element.dataset.navigation]};\n            listener.element.addEventListener(listener.event, listener.callback);\n            this.#elementListeners.push(listener);\n        });\n    }\n\n    static removeListeners() {\n        window.removeEventListener('keydown', Navigation.handleKeyDown);\n        this.#elementListeners.forEach((listener) => {\n            listener.element.removeEventListener(listener.event, listener.callback);\n        });\n        this.#elementListeners = [];\n    }\n\n    static handleKeyDown(e) {\n        if (e.defaultPrevented) return;\n\n        switch (e.key) {\n            case 'Left':\n            case 'ArrowLeft':\n                Navigation.prev();\n                break;\n            case 'Right':\n            case 'ArrowRight':\n                Navigation.next();\n                break\n        }\n    }\n}\n","import utils from '../utils/index.mjs';\n\nexport default utils.createElement(`\n    <style>\n        /**\n         * PRIMARY BUTTON (standard) size=m\n         * ---------------------------\n         */\n         :host, :host([size=\"m\"]){\n            --gap: 0.5rem;\n            --icon-size: 1.5rem;\n            --text-transform: uppercase;\n            --letter-spacing: var(--font-letter-spacing-04, 0.078125rem);\n            --padding-y: 0.875rem;\n            --padding-x: 1.5rem;\n            --min-size: 3rem;\n         }\n        \n         :host([size=\"s\"]){\n            --gap: 0.375rem;\n            --icon-size: 1.25rem;\n            --text-transform: none;\n            --letter-spacing: var(--font-letter-spacing-02, 0.046875rem);\n            --padding-y: 0.375rem;\n            --padding-x: 1rem;\n            --min-size: 2rem;\n         }\n        \n         :host([size=\"l\"]){\n            --padding-y: 1.25rem;\n            --padding-x: 2rem;\n            --min-size: 3.75rem;\n         }\n        \n        :host,\n        :host([variant=\"primary\"]) {\n            display: inline-flex;\n            gap: var(--gap);\n            align-items: center;\n            box-sizing: border-box;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-weight: var(--font-weight-medium, 500);\n            font-size: var(--font-size-03, 1rem);\n            border-radius: var(--radius-01, 0.25rem);\n            letter-spacing: var(--letter-spacing);\n            color: var(--color-button-primary, rgba(255,255,255,0.84));\n            background-color: var(--color-button-primary-background, #27166F);\n            text-transform: var(--text-transform);\n            min-width: var(--min-size);\n            min-height: var(--min-size);\n            cursor: pointer;\n        }\n        \n        /**\n         * SECONDARY BUTTON \n         */\n        :host([variant=\"secondary\"]) {\n            color: var(--color-button-secondary, rgba(0,0,0,0.84));\n            background-color: var(--color-button-secondary-background, #FFF);\n            /* inside set border */\n            box-shadow: inset 0 0 0 var(--size-width-button-border-secondary, 0.125rem) var(--color-button-secondary-border, #27166F);\n        }\n        :host([variant=\"secondary\"]) ::slotted(z-icon){\n            color: var(--color-button-secondary, rgba(0,0,0,0.84));\n        }\n        \n        /* hover only on non touch devices */\n        :host(.no-touch:hover),\n        :host(:active),\n        :host([active]){\n            background-color: var(--color-button-primary-background-interaction, rgb(10,10,10));\n            color: var(--color-button-primary-interaction, rgba(255,255,255,.84));\n            box-shadow: none;\n        }\n        :host(.no-touch:hover) ::slotted(z-icon),\n        :host(:active) ::slotted(z-icon),\n        :host([active]) ::slotted(z-icon){\n            color: inherit;\n        }\n        \n        \n        /**\n         * TRANSPARENT BUTTON\n         * currently no interaction state\n         * ---------------------------\n         */\n        :host([variant=\"transparent\"]),\n        :host([variant=\"transparent\"].no-touch:hover),\n        :host([variant=\"transparent\"]:active),\n        :host([variant=\"transparent\"][active]){\n            font-weight: var(--font-weight-regular, 400);\n            font-size: var(--font-size-02, 0.875rem);\n            color: var(--color-button-transparent, rgb(255,255,255));\n            background-color: var(--color-button-transparent-background, rgba(0,0,0,0.5));\n            letter-spacing: var(--font-letter-spacing-04, 0.078125rem);\n        }\n        \n        :host([variant=\"transparent\"]) ::slotted(z-icon){\n            color: var(--color-button-transparent, rgb(255,255,255));\n        }\n        \n        :host([round]){\n            border-radius: 50%;\n        }\n        \n        :host([hidden]){\n            display: none;\n        }\n        \n        :host([disabled]){\n            pointer-events: none;\n            color: var(--color-button-disabled, rgba(255,255,255,0.84));\n            background-color: var(--color-button-background-disabled, rgba(0,0,0,0.24));\n        }\n        \n        :host([variant=\"secondary\"][disabled]){\n            pointer-events: none;\n            color: var(--color-button-background-disabled, rgba(0,0,0,0.24));\n            background-color: var(--color-button-secondary-background, #FFF);\n            box-shadow: inset 0 0 0 var(--size-width-button-border-secondary, 0.125rem) var(--color-button-background-disabled, rgba(0,0,0,0.24));\n        }\n        \n        :host([disabled]) ::slotted(z-icon){\n            color: var(--color-button-disabled, rgba(255,255,255,0.84));\n        }\n        \n        ::slotted(*){\n            box-sizing: border-box;\n        }\n        \n        ::slotted(z-icon){\n            color: var(--color-button-primary, rgba(255,255,255,0.84));\n            z-index: 1;\n            display: inline-block;\n            pointer-events: none;\n            width: var(--icon-size);\n            height: var(--icon-size);\n            margin: 0 auto;\n            flex-shrink: 0;\n        }\n        \n        ::slotted(z-icon[slot=\"icon-left\"]){\n            margin-right: 0;\n            margin-left: var(--padding-x);\n        }\n        ::slotted(z-icon[slot=\"icon-right\"]){\n            margin-left: 0;\n            margin-right: var(--padding-x);\n        }\n        \n        ::slotted(a),\n        ::slotted(span){\n            box-sizing: border-box;\n            display: inline-block;\n            border-radius: var(--radius-01, 0.25rem);\n            width: 100%;\n            color: inherit;\n            text-decoration: none;\n            padding: var(--padding-y) var(--padding-x);\n        }\n        \n        ::slotted(a[slot=\"icon\"]){\n            display: inline-flex;\n            position: relative;\n            width: var(--icon-size);\n            height: var(--icon-size);\n            padding: var(--padding-y);\n            margin: auto;\n        }\n        \n         /* if icon-left is used with anchor tag on the right */\n        ::slotted(a[slot=\"text-right\"]){\n            padding: var(--padding-y) var(--padding-x) var(--padding-y) calc(var(--padding-x) + var(--gap) + var(--icon-size));\n            margin-left: calc((var(--padding-x) + var(--gap) + var(--icon-size)) *-1);\n        }\n        \n         /* if icon-right is used with anchor tag on the left */\n        ::slotted(a[slot=\"text-left\"]){\n            padding: var(--padding-y) calc(var(--padding-x) + var(--gap) + var(--icon-size)) var(--padding-y) var(--padding-x);\n            margin-right: calc((var(--padding-x) + var(--gap) + var(--icon-size)) *-1);\n        }\n        \n         /* if icon-left is used with span tag on the right */\n        ::slotted(span[slot=\"text-right\"]){\n            padding: var(--padding-y) var(--padding-x) var(--padding-y) 0;\n        }\n        \n         /* if icon-right is used with span tag on the left */\n        ::slotted(span[slot=\"text-left\"]){\n            padding: var(--padding-y) 0 var(--padding-y) var(--padding-x);\n        }\n        \n        /**\n         * MENU BUTTON\n         * ---------------------------\n         */\n        :host([variant=\"menu\"]),\n        :host([variant=\"profile-menu\"]){\n            --icon-size: 1.25rem;\n            display: flex;\n            gap: var(--spacing-03, 0.5rem);\n            font-family: var(--font-family-primary-condensed, 'Roboto Condensed'), sans-serif;\n            font-weight: var(--font-weight-bold, 700);\n            font-size: var(--font-size-02, 0.875rem);\n            letter-spacing: var(--font-letter-spacing-04, 0.078125rem);\n            word-break: break-word;\n            color: var(--color-font, rgba(0,0,0,0.84));\n            min-height: var(--size-height-min-button-menu, 3rem);\n            background-color: transparent;\n            text-transform: uppercase;\n            padding: 0;\n            margin:0;\n        }\n        \n        :host([variant=\"profile-menu\"]){\n            min-height: var(--size-height-min-button-profile-menu, 5rem);\n            border-radius: 0;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.16);\n            background-color: var( --color-button-profile-menu-background, rgba(255, 255, 255, 0.64));\n        }\n        \n        :host([variant=\"profile-menu\"]:last-child){\n            border-bottom: none;\n        }\n        \n        /* hover only on non touch devices */\n        :host([variant=\"menu\"].no-touch:hover),\n        :host([variant=\"menu\"]:active),\n        :host([variant=\"menu\"][active]){\n            background-color: var(--color-button-menu-background-hover, rgba(255, 255, 255, 0.84));\n            color: color: var(--color-font, rgba(0,0,0,0.84));\n        }\n        \n        /* hover only on non touch devices */\n        :host([variant=\"profile-menu\"].no-touch:hover),\n        :host([variant=\"profile-menu\"]:active),\n        :host([variant=\"profile-menu\"][active]){\n            background-color: var(--color-button-profile-menu-background-hover, rgba(227, 236, 247, 0.6));\n            color: inherit;\n        }\n        \n        :host([variant=\"menu\"]) ::slotted(a), :host([variant=\"profile-menu\"]) ::slotted(a),\n        :host([variant=\"menu\"]) ::slotted(span), :host([variant=\"profile-menu\"]) ::slotted(span){\n            padding: var(--spacing-05, 1rem) var(--spacing-07, 1.5rem);\n        }\n        \n        :host([variant=\"menu\"]) ::slotted([slot=\"icon-left\"]),\n        :host([variant=\"profile-menu\"]) ::slotted([slot=\"icon-left\"]){\n            width: var(--icon-size);\n            height: var(--icon-size);\n            margin-left: var(--spacing-07, 1.5rem);\n            color: var(--color-icon, rgba(0,0,0,0.84));\n        }\n        \n        :host([variant=\"profile-menu\"]:first-child) ::slotted([slot=\"icon-left\"]){\n            --icon-size: 2rem;\n            border-radius: 50%;\n        }\n        /* if icon-left is used with anchor tag for text-right */\n        :host([variant=\"menu\"]) ::slotted(a[slot=\"text-right\"]),\n        :host([variant=\"profile-menu\"]) ::slotted(a[slot=\"text-right\"]){\n            padding: var(--spacing-05, 1rem) var(--spacing-07, 1.5rem) var(--spacing-05, 1rem) calc(var(--icon-size) + var(--spacing-03, 0.5rem) + var(--spacing-07, 1.5rem));\n            margin-left: calc((var(--icon-size) + var(--spacing-03, 0.5rem) + var(--spacing-07, 1.5rem)) * -1);\n        }\n        \n        /* if icon-left is used with span tag for text-right */\n        :host([variant=\"menu\"]) ::slotted(span[slot=\"text-right\"]),\n        :host([variant=\"profile-menu\"]) ::slotted(span[slot=\"text-right\"]){\n            padding: var(--spacing-05, 1rem) var(--spacing-07, 1.5rem) var(--spacing-05, 1rem) 0;\n        }\n        \n        /* correct padding to make room for chevron down icon */\n        :host([variant=\"profile-menu\"]:first-child) ::slotted([slot=\"text-right\"]){\n            padding-right: var(--spacing-09, 2.5rem) ;\n        }\n        \n        /* --breakpoint-m */\n        @media (max-width: ${utils.getCSSVar('--breakpoint-m') || '899px'}){\n            :host([variant=\"menu\"]){\n                font-weight: var(--font-weight-regular, 400);\n            }\n        }\n    \n    </style>\n    <slot name=\"icon-left\"></slot>\n    <slot name=\"text-right\"></slot>\n    <slot name=\"text-left\"></slot>\n    <slot name=\"icon-right\"></slot>\n    <slot name=\"text\"></slot>\n    <slot name=\"icon\"></slot> \n`);\n","import createElement from './utils/createElement.mjs';\nimport ZHTMLElementInterface from './ZHTMLElementInterface.mjs';\n\nexport default class ZApp extends ZHTMLElementInterface {\nstatic __n(){return \"ZApp\"};\n\n\n    static TEMPLATE = createElement(`\n        <style>\n            :host{\n            }\n        </style>\n        <slot></slot>\n    `);\n}","/**\n * Workaround for using css vars for css media queries\n * @param {string} cssVariableName\n * @returns {string}\n */\n\nexport default function getCSSVar(cssVariableName) {\n    return globalThis.getComputedStyle(document.documentElement).getPropertyValue(cssVariableName);\n}\n","import createElement from '../utils/createElement.mjs';\n\nexport default createElement(`\n    <style>\n        z-file-upload {\n            box-sizing: border-box;\n            display: block;\n            position: relative;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n        }\n\n        z-file-upload * {\n            box-sizing: border-box;\n        }\n\n        z-file-upload.is-dragover {\n            outline: var(--color-selection-border, rgba(0,0,0,0.4)) dashed var(--size-width-selection-border, 0.125rem);\n            outline-offset: calc(var(--spacing-03, 0.5rem) * -1);\n        }\n\n        z-file-upload .z-file-upload__box {\n            display: block;\n            min-height: 8rem;\n            width: 100%;\n            padding: var(--spacing-05, 1rem);\n            background-color: rgb(248, 248, 248);\n            text-align: center;\n            border-radius: var(--radius-01, 0.25rem);\n        }\n\n        z-file-upload .z-file-upload__icon {\n            margin: var(--spacing-05, 1rem) auto;\n            height: 2.5rem;\n            width: 2.5rem;\n            color: var(--color-file-upload-icon, rgba(0,0,0,0.84));\n            text-align: center;\n        }\n\n        z-file-upload input.z-file-upload__input {\n            width: 1px;\n            height: 1px;\n            opacity: 0;\n            overflow: hidden;\n            position: absolute;\n            z-index: -1;\n        }\n\n        /* secondary button style size=s */\n        z-file-upload label.z-file-upload__label {\n            box-sizing: border-box;\n            display: inline-block;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-weight: var(--font-weight-medium, 500);\n            font-size: var(--font-size-03, 1rem);\n            border-radius: var(--radius-01, 0.25rem);\n            min-height: 2rem;\n            min-width: 2rem;\n            cursor: pointer;\n            letter-spacing: var(--font-letter-spacing-02, 0.046875rem);\n            padding: 0.375rem var(--spacing-05, 1rem);\n            color: var(--color-button-secondary, rgba(0,0,0,0.84));\n            background-color: var(--color-button-secondary-background, #FFF);\n            /* inside set border */\n            box-shadow: inset 0 0 0 var(--size-width-button-border-secondary, 0.125rem) var(--color-button-secondary-border, #27166F);\n        }\n\n        z-file-upload label.z-file-upload__label:hover {\n            color: var(--color-font, rgba(0,0,0,0.84));\n        }\n\n        z-file-upload .z-file-upload__focus-wrapper:focus-within label.z-file-upload__label {\n            outline: 2px solid royalblue;\n            outline: -webkit-focus-ring-color auto 1px;\n        }\n\n        z-file-upload .z-file-upload__text {\n            margin: var(--spacing-05, 1rem) 0;\n            color: var(--color-font, rgba(0,0,0,0.84));\n            text-align: center;\n        }\n\n        z-file-upload .z-file-upload__text--drag-and-drop{\n            font-size: var(--font-size-04, 1.125rem);\n        }\n\n        z-file-upload .z-file-upload__text--file-info {\n            color: var(--color-black-60, rgba(0,0,0,0.6));\n            font-size: var(--font-size-02, 0.875rem);\n        }\n\n         z-file-upload .z-file-upload__file-list {\n            padding: 0;\n            margin: 0;\n            list-style: none;\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file {\n            display: flex;\n            gap: var(--spacing-05, 1rem);\n            justify-content: flex-end;\n            background: var(--color-white-100, rgb(255, 255, 255));\n            border-radius: var(--radius-01, 0.25rem);\n            margin-bottom: var(--spacing-03, 0.5rem);\n            font-size: var(--font-size-02, 0.875rem);\n            color: var(--color-font, rgba(0,0,0,0.84));\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file.z-file-upload__file--invalid {\n            background: var(--color-alert-light, rgb(255, 233, 233));\n            color: var(--color-alert, #ff0000);\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file > * {\n            margin: auto 0;\n            flex: 0;\n            white-space: nowrap;\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file .file-name {\n            flex: 1;\n            margin: auto auto auto var(--spacing-06, 1.25rem);\n            overflow: hidden;\n            text-overflow: ellipsis;\n            text-align: left;\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file .file-size {\n            flex-basis: 4rem;\n            text-align: right;\n            color: var(--color-black-60, rgba(0,0,0,0.6));\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file button.file-remove{\n            all: initial;\n            display: inline-block;\n            font-family: inherit;\n            font-size: 1.5em;\n            margin: 0;\n            padding: 0;\n            border: 0;\n            flex-basis: 3rem;\n            height: 3rem;\n            background: none;\n            position: relative;\n            text-align: center;\n            cursor: pointer;\n        }\n\n        z-file-upload .z-file-upload__file-list .z-file-upload__file button.file-remove:focus {\n            outline: 2px solid royalblue;\n            outline: -webkit-focus-ring-color auto 1px;\n        }\n\n        z-file-upload .visually-hidden {\n            clip: rect(1px, 1px, 1px, 1px);\n            height: 1px;\n            overflow: hidden;\n            position: absolute;\n            white-space: nowrap;\n            width: 1px;\n        }\n\n        z-file-upload .z-file-upload__size-info {\n            text-align: right;\n            width: 100%;\n            margin: var(--spacing-03, 0.5rem) 0 0;\n        }\n\n        z-file-upload .z-file-upload__size-info > div {\n            display: inline-block;\n            padding: var(--spacing-03, 0.5rem) var(--spacing-04, 0.75rem);\n            border-radius: var(--radius-01, 0.25rem);\n            background-color: var(--color-white-100, rgb(255, 255, 255));\n            font-size: var(--font-size-02, 0.875rem);\n        }\n\n        z-file-upload .z-file-upload__size-info .z-file-upload__status-icon {\n            width: 1em;\n            height: 1em;\n            vertical-align: middle;\n            margin-right: var(--spacing-02, 0.25rem);\n        }\n\n        z-file-upload .z-file-upload__size-info .z-file-upload__status-icon--error {\n            display: none;\n            color: var(--color-alert, #ff0000);\n        }\n\n        z-file-upload .z-file-upload__size-info .z-file-upload__status-icon--ok {\n            display: inline-block;\n            color: var(--color-ok, #2aa94a);\n        }\n\n        z-file-upload .z-file-upload__size-info-text {\n            display: inline-block;\n            vertical-align: middle;\n            color: var(--color-black-60, rgba(0,0,0,0.6));\n            line-height: 1;\n        }\n\n        /* STATES */\n\n        z-file-upload .z-file-upload__text--success {\n            color: var(--color-ok, #2aa94a);\n            font-weight: var(--font-weight-bold, 700);\n            font-size: var(--font-size-05, 1.25rem);\n            display: none;\n        }\n        z-file-upload[state=\"success\"] .z-file-upload__text--success {\n            display: block;\n            animation-name: z-file-upload-animation--feedback;\n            animation-duration: var(--transition-duration-02, 0.2s);\n            animation-timing-function: var(--transition-easing, ease-in-out);\n        }\n\n        z-file-upload .z-file-upload__text--error {\n            color: var(--color-alert, #2aa94a);\n            font-weight: var(--font-weight-bold, 700);\n            font-size: var(--font-size-05, 1.25rem);\n            display: none;\n        }\n        z-file-upload[state=\"error\"] .z-file-upload__text--error,\n        z-file-upload[state=\"errorFileType\"] .z-file-upload__text--error,\n        z-file-upload[state=\"errorSize\"] .z-file-upload__text--error{\n            display: block;\n            animation-name: z-file-upload-animation--feedback;\n            animation-duration: var(--transition-duration-02, 0.2s);\n            animation-timing-function: var(--transition-easing, ease-in-out);\n        }\n\n        z-file-upload[state=\"errorSize\"] .z-file-upload__size-info .z-file-upload__status-icon--ok {\n            display: none;\n        }\n        z-file-upload[state=\"errorSize\"] .z-file-upload__size-info .z-file-upload__status-icon--error {\n            display: inline-block;\n        }\n        z-file-upload[state=\"errorFileType\"] .z-file-upload__size-info {\n            display: none;\n        }\n\n        @keyframes z-file-upload-animation--feedback {\n            from {\n                opacity: 0;\n                transform: translateY(1rem);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n\n    </style>\n\n    <div class=\"z-file-upload__box\">\n        <p class=\"z-file-upload__icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\" xml:space=\"preserve\">\n                <path fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M20 26.2v-20m7.5 7.6L20 6.2l-7.5 7.6m26.3 12.4v2.5c0 2.8-2.2 5-5 5H6.3c-2.8 0-5-2.2-5-5v-2.5\"/>\n            </svg>\n        </p>\n        <p class=\"z-file-upload__text z-file-upload__text--drag-and-drop\">Drag and drop your images or</p>\n        <div class=\"z-file-upload__focus-wrapper\">\n            <label for=\"z-file-upload\" class=\"z-file-upload__label\">\n                 Browse files\n            </label>\n            <input id=\"z-file-upload\"\n                   class=\"z-file-upload__input\"\n                   type=\"file\"\n                   name=\"files\"\n                   accept=\"image/jpeg, image/png, application/pdf\"\n                   aria-describedby=\"z-file-upload-validation\"\n                   multiple />\n        </div>\n        <p class=\"z-file-upload__text z-file-upload__text--file-info\">\n            Upload any file...\n        </p>\n        <p class=\"z-file-upload__text z-file-upload__text--success\">\n            Done!\n        </p>\n        <p id=\"z-file-upload-validation\" class=\"z-file-upload__text z-file-upload__text--error\" aria-live=\"assertive\">\n            Error!\n        </p>\n        <ul class=\"z-file-upload__file-list\"></ul>\n\n        <div class=\"z-file-upload__size-info\">\n             <div>\n                <svg class=\"z-file-upload__status-icon z-file-upload__status-icon--error\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\" xml:space=\"preserve\">\n                    <path fill=\"currentColor\" d=\"M500 10C229.4 10 10 229.4 10 500s219.4 490 490 490 490-219.4 490-490S770.6 10 500 10zm278.3 695.2L711 774.6 500 568.4 289 774.6l-67.4-69.4 208.3-205.4-208.3-203.6 70.1-70.8L500 430.7l208.3-205.4 70.1 70.8-208.3 203.7 208.2 205.4z\"/>\n                </svg>\n                <svg class=\"z-file-upload__status-icon z-file-upload__status-icon--ok\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\" xml:space=\"preserve\">\n                   <path fill=\"currentColor\" d=\"M500 10C229.4 10 10 229.4 10 500s219.4 490 490 490 490-219.4 490-490S770.6 10 500 10zm-75.7 730.1L226.7 538.4l60.1-62.8 137.5 130.7 335.4-336.1 66.9 71.6-402.3 398.3z\"/>\n                </svg>\n                <span class=\"z-file-upload__size-info-text\">0 / 10000 kB</span>\n            </div>\n        </div>\n    </div>\n`);\n","import utils from '../utils/index.mjs';\n\nexport default utils.createElement(`\n    <style>\n        z-input-container {\n            display: block;\n            position: relative;\n        }\n    \n        /* TEXTish INPUTS */\n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]),\n        z-input-container textarea,\n        z-input-container select {\n            background-color: var(--color-input-background, rgb(255, 255, 255));\n            border: var(--size-width-input-border, 0.125rem) solid var(--color-input-border, rgba(0,0,0,.6));\n            border-radius: var(--radius-01, 0.25rem);\n            box-sizing: border-box;\n            color: var(--color-input, rgba(0,0,0,.84));\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-size: var(--font-size-base, 16px);\n            font-weight: var(--font-weight-regular, 400);\n            height: 3rem;\n            letter-spacing: 0;\n            margin: 0;\n            padding: var(--spacing-02, 0.25rem) var(--spacing-05, 1rem);\n            position: relative;\n            width: 100%;\n            touch-action: manipulation;\n        }\n    \n        z-input-container select {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            background-image: url(\"data:image/svg+xml;utf8,<svg height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M12 14.74a.96.96 0 01-.59-.2l-.09-.08-4.14-4.14a.62.62 0 01.8-.95l.09.07L12 13.37l3.93-3.93a.63.63 0 01.8-.07l.09.07c.21.22.24.55.07.8l-.07.08-4.14 4.14a.96.96 0 01-.68.28z' fill='${utils.getCSSVar('--color-font') || 'rgba(0,0,0,0.84)'}'  fill-rule='evenodd'/></svg>\");\n            background-repeat: no-repeat;\n            background-position-x: calc(100% - var(--spacing-03, .5rem));\n            background-position-y: 50%;\n            padding-right: var(--spacing-09, 2.5rem);\n        }\n    \n        z-input-container textarea {\n            height: initial;\n            padding: var(--spacing-04, 0.75rem) var(--spacing-05, 1rem);\n        }\n    \n        z-input-container input::placeholder,\n        z-input-container textarea::placeholder {\n            color: transparent;\n            transition-duration: var(--transition-duration-01, 0.2s);\n            transition-property: color;\n            transition-timing-function: var(--transition-easing, ease-in-out);\n        }\n    \n        z-input-container input:focus:placeholder-shown::placeholder,\n        z-input-container textarea:focus:placeholder-shown::placeholder {\n            color: var(--color-input-placeholder);\n        }\n    \n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]):disabled,\n        z-input-container textarea:disabled,\n        z-input-container select:disabled {\n            cursor: not-allowed;\n            background-color: var(--color-input-background, rgb(255, 255, 255));\n            opacity: 1;\n            border-color: var(--color-input-disabled, rgba(0,0,0,0.4));\n            outline-color: var(--color-input-disabled, rgba(0,0,0,0.4));\n            color: var(--color-input-disabled, rgba(0,0,0,0.4));\n        }\n        \n        z-input-container select:disabled {\n            background-image: url(\"data:image/svg+xml;utf8,<svg height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M12 14.74a.96.96 0 01-.59-.2l-.09-.08-4.14-4.14a.62.62 0 01.8-.95l.09.07L12 13.37l3.93-3.93a.63.63 0 01.8-.07l.09.07c.21.22.24.55.07.8l-.07.08-4.14 4.14a.96.96 0 01-.68.28z' fill='${utils.getCSSVar('--color-input-disabled') || 'rgba(0,0,0,0.4)'}'  fill-rule='evenodd'/></svg>\");\n        }\n    \n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]):disabled + label.z-input-container__label,\n        z-input-container textarea:disabled + label.z-input-container__label,\n        z-input-container select:disabled + label.z-input-container__label {\n            pointer-events: none;\n            color: var(--color-input-disabled, rgba(0,0,0,0.4));\n        }\n    \n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]) ~ label.z-input-container__label,\n        z-input-container textarea ~ label.z-input-container__label,\n        z-input-container select ~ label.z-input-container__label {\n            background-color: var(--color-input-background, rgb(255, 255, 255));\n            color: var(--color-input, rgba(0,0,0,.84));\n            display: inline-block;\n            line-height: 1.25rem;\n            letter-spacing: 0;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-size: var(--font-size-01, 12px);\n            font-weight: var(--font-weight-regular, 400);\n            margin: 0 0.75rem;\n            padding: 0 0.3125rem;\n            text-transform: none;\n            position: absolute;\n            left: 0;\n            top: 0;\n            touch-action: manipulation;\n            transform: translateY(-50%);\n            transition-duration: var(--transition-duration-01, 0.2s);\n            transition-property: transform, top;\n            transition-timing-function: var(--transition-easing, ease-in-out);\n        }\n    \n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]):placeholder-shown + label.z-input-container__label,\n        z-input-container textarea:placeholder-shown + label.z-input-container__label {\n            cursor: text;\n            max-width: 66.66%;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            transform-origin: left bottom;\n            top: 1.05rem;\n            transform: scale(1.33);\n        }\n    \n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]):not(:placeholder-shown) + label.z-input-container__label,\n        z-input-container input:not([type=\"button\"]):not([type=\"checkbox\"]):not([type=\"file\"]):not([type=\"image\"]):not([type=\"radio\"]):not([type=\"range\"]):not([type=\"reset\"]):not([type=\"submit\"]):focus + label.z-input-container__label,\n        z-input-container textarea:not(placeholder-shown) + label.z-input-container__label,\n        z-input-container textarea:focus + label.z-input-container__label {\n            top: 0;\n            transform: translateY(-50%) scale(1);\n        }\n    \n        z-input-container input[required]:not([type=\"radio\"]) + label.z-input-container__label::after,\n        z-input-container textarea[required] + label.z-input-container__label::after,\n        z-input-container select[required] + label.z-input-container__label::after {\n            content: '*';\n            padding-left: var(--spacing-01, 0.125rem);\n        }\n    \n        z-input-container .z-input-container__feedback {\n            display: none;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-size: var(--font-size-01, 12px);\n            font-weight: var(--font-weight-bold, 700);\n            line-height: 1.25;\n            letter-spacing: 0;\n            margin: 0 0.75rem;\n            padding: 0 0.3125rem;\n            text-transform: none;\n        }\n    \n        z-input-container[error] .z-input-container__feedback {\n            display: inline-block;\n            color: var(--color-alert, #ff0000);\n            padding-top: var(--spacing-02, 0.25rem);\n        }\n        \n        z-input-container[error] input,\n        z-input-container[error] textarea,\n        z-input-container[error] select {\n            border-color: var(--color-alert, #ff0000) !important;\n        }\n    \n        /* CHECKBOX */\n    \n        z-input-container input[type=\"checkbox\"] {\n            position: absolute;\n            height: 0.0625rem;\n            width: 0.0625rem;\n            border: none;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            clip: rect(0.0625rem, 0.0625rem, 0.0625rem, 0.0625rem);\n        }\n    \n        z-input-container input[type=\"checkbox\"] + label.z-input-container__label {\n            box-sizing: border-box;\n            cursor: pointer;\n            display: flex;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-size: var(--font-size-base, 16px);\n            font-weight: var(--font-weight-regular, 400);\n            color: var(--color-font, rgba(0,0,0,0.84));\n            line-height: 1.25;\n            position: relative;\n        }\n        z-input-container input[type=\"checkbox\"] + label.z-input-container__label::before,\n        z-input-container input[type=\"checkbox\"] + label.z-input-container__label::after {\n            content: '';\n            padding: 0;\n            margin: 0;\n            box-sizing: content-box;\n            transition-duration: var(--transition-duration-01, 0.2s);\n            transition-timing-function: var(--transition-easing, ease-in-out);\n            transition-property: transform, border-color, background-color;\n        }\n    \n        z-input-container input[type=\"checkbox\"] + label.z-input-container__label::before {\n            position: relative;\n            display: inline-block;\n            border: var(--size-width-selection-border, 0.125rem) solid var(--color-selection-border, rgba(0,0,0,.4));\n            border-radius: var(--radius-01, 0.25rem);\n            width: 1rem;\n            height: 1rem;\n            margin: auto var(--spacing-03, 0.5rem) auto 0;\n        }\n    \n        z-input-container[error] input[type=\"checkbox\"] + label.z-input-container__label::before,\n        z-input-container[error] input[type=\"checkbox\"]:checked + label.z-input-container__label::before {\n            border-color: var(--color-alert, #ff0000);\n        }\n    \n        /* focus */\n        z-input-container:focus-within input[type=\"checkbox\"] + label.z-input-container__label::before {\n            outline: 2px solid royalblue;\n            outline: -webkit-focus-ring-color auto 1px;\n        }\n    \n        /* checked */\n        z-input-container input[type=\"checkbox\"]:checked + label.z-input-container__label::before {\n            background: var(--color-selection-background-selected, #27166F);\n            border-color: var(--color-selection-background-selected, #27166F);\n        }\n        z-input-container input[type=\"checkbox\"] + label.z-input-container__label::after {\n            position: absolute;\n            top: 0.4rem;\n            left: 0.25rem;\n            height: 0.1875rem;\n            width: 0.625rem;\n            transform-origin: bottom left;\n            transform: rotate(-45deg) scaleX(0) translateY(100%);\n            border-left: 0.125rem solid var(--color-selection-selected, rgba(255, 255, 255, 0.84));\n            border-bottom: 0.125rem solid var(--color-selection-selected, rgba(255, 255, 255, 0.84));\n        }\n        z-input-container input[type=\"checkbox\"]:checked + label.z-input-container__label::after {\n            transform: rotate(-45deg) scaleX(1) translateY(100%);\n        }\n    \n        /* disabled */\n        z-input-container input[type=\"checkbox\"]:disabled + label.z-input-container__label {\n            color: var(--color-input-disabled, rgba(0,0,0,0.4));\n            cursor: not-allowed;\n        }\n        z-input-container input[type=\"checkbox\"]:disabled + label.z-input-container__label::before {\n            background-color: var(--color-selection-background-disabled, rgba(0,0,0,0.16));\n            border-color: var(--color-selection-border-disabled, rgba(0,0,0,0.24));\n            cursor: not-allowed;\n        }\n        z-input-container input[type=\"checkbox\"]:disabled + label.z-input-container__label::after {\n            border-color: var(--color-selection-border-disabled, rgba(0,0,0,0.24));\n        }\n    \n    \n        /* RADIO */\n    \n        z-input-container input[type=\"radio\"]{\n            position: absolute;\n            visibility: visible;\n            opacity: 0;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            margin:0;\n            padding:0;\n            border: none;\n        }\n    \n        z-input-container input[type=\"radio\"] + label.z-input-container__label {\n            box-sizing: border-box;\n            cursor: pointer;\n            display: inline-flex;\n            color: var(--color-font, rgba(0,0,0,0.84));\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-size: var(--font-size-base, 16px);\n            font-weight: var(--font-weight-regular, 400);\n            line-height: 1.25;\n            position: relative;\n        }\n    \n        z-input-container input[type=\"radio\"] + label.z-input-container__label::before,\n        z-input-container input[type=\"radio\"] + label.z-input-container__label::after {\n            content: '';\n            position: relative;\n            border-radius: 50%;\n            box-sizing: content-box;\n            transition-duration: var(--transition-duration-01, 0.2s);\n            transition-timing-function: var(--transition-easing, ease-in-out);\n            transition-property: transform, border-color, background-color;\n        }\n    \n        z-input-container input[type=\"radio\"] + label.z-input-container__label::before {\n            margin: auto var(--spacing-03, 0.5rem) auto 0;\n            border: var(--size-width-selection-border, 0.125rem) solid var(--color-selection-border, rgba(0,0,0,.4));\n            width: 1rem;\n            height: 1rem;\n            background: transparent;\n        }\n    \n    \n        z-input-container[error] input[type=\"radio\"] ~ .z-input-container__feedback {\n            display: block;\n        }\n    \n        z-input-container[error] input[type=\"radio\"] + label.z-input-container__label::before,\n        z-input-container[error] input[type=\"radio\"]:checked + label.z-input-container__label::before{\n            border-color: var(--color-alert, #ff0000);\n        }\n    \n        z-input-container input[type=\"radio\"] + label.z-input-container__label::after {\n            position: absolute;\n            width: 0.5rem;\n            height: 0.5rem;\n            left: .375rem;\n            top: .375rem;\n            transform: scale(0);\n        }\n    \n        /* focus */\n        z-input-container:focus-within input[type=\"radio\"] + label.z-input-container__label::before  {\n            outline: 2px solid royalblue;\n            outline: -webkit-focus-ring-color auto 1px;\n        }\n    \n        /* checked */\n        z-input-container input[type=\"radio\"]:checked + label.z-input-container__label::before {\n            border-color: var(--color-selection-background-selected, #27166F);\n            background: var(--color-selection-background-selected, #27166F);\n        }\n        z-input-container input[type=\"radio\"]:checked + label.z-input-container__label::after {\n            transform: scale(1);\n            background: var(--color-selection-selected, #27166F);\n        }\n    \n        /* disabled */\n        z-input-container input[type=\"radio\"]:disabled + label.z-input-container__label {\n            color: var(--color-input-disabled, rgba(0,0,0,0.4));\n            cursor: not-allowed;\n        }\n        z-input-container input[type=\"radio\"]:disabled + label.z-input-container__label::before {\n            background-color: var(--color-selection-background-disabled, rgba(0,0,0,0.16));\n            border-color: var(--color-selection-border-disabled, rgba(0,0,0,0.24));\n            cursor: not-allowed;\n        }\n        z-input-container input[type=\"radio\"]:disabled + label.z-input-container__label::after {\n            background-color: var(--color-selection-border-disabled, rgba(0,0,0,0.24));\n        }\n    \n    \n        /* BUTTONS */\n    \n        z-input-container .zep-input-container__button {\n            --webkit-appearance: none;\n            box-sizing: border-box;\n            border: none;\n            margin: 0;\n            display: inline-flex;\n            align-items: center;\n            font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n            font-weight: var(--font-weight-medium, 500);\n            font-size: var(--font-size-03, 1rem);\n            border-radius: var(--radius-01, 0.25rem);\n            color: var(--color-button-primary, rgba(255,255,255,0.84));\n            background-color: var(--color-button-primary-background, #27166F);\n            cursor: pointer;\n            text-transform: uppercase;\n            letter-spacing: var(--font-letter-spacing-04, 0.078125rem);\n            padding: 1.25rem 2rem;\n            min-height: 3.75rem;\n            min-width: 3.75rem;\n        }\n    \n        z-input-container .zep-input-container__button.zep-input-container__button--secondary {\n            color: var(--color-button-secondary, rgba(0,0,0,0.84));\n            background-color: var(--color-button-secondary-background, #FFF);\n            /* inside set border */\n            box-shadow: inset 0 0 0 var(--size-width-button-border-secondary, 0.125rem) var(--color-button-secondary-border, #27166F);\n        }\n    \n        /* hover only on non touch devices */\n        z-input-container.no-touch .zep-input-container__button:hover,\n        z-input-container .zep-input-container__button:active {\n            background-color: var(--color-button-primary-background-interaction, rgb(10,10,10));\n            color: var(--color-button-primary-interaction, rgba(255,255,255,.84));\n            box-shadow: none;\n        }\n    \n        /* disabled */\n        z-input-container .zep-input-container__button:disabled,\n        z-input-container.no-touch .zep-input-container__button:disabled {\n            cursor: not-allowed;\n            color: var(--color-button-disabled, rgba(255,255,255,0.84));\n            background-color: var(--color-button-background-disabled, rgba(0,0,0,0.24));\n        }\n    \n        z-input-container .zep-input-container__button.zep-input-container__button--secondary:disabled,\n        z-input-container.no-touch .zep-input-container__button.zep-input-container__button--secondary:disabled {\n            cursor: not-allowed;\n            color: var(--color-button-background-disabled, rgba(0,0,0,0.24));\n            background-color: var(--color-button-secondary-background, #FFF);\n            box-shadow: inset 0 0 0 var(--size-width-button-border-secondary, 0.125rem) var(--color-button-background-disabled, rgba(0,0,0,0.24));\n        }\n    </style>\n`);\n","import createElement from './utils/createElement.mjs';\nimport ZHTMLElementInterface from './ZHTMLElementInterface.mjs';\n\nexport default class ZLogo extends ZHTMLElementInterface {\nstatic __n(){return \"ZLogo\"};\n\n\n    static TEMPLATE = createElement(`\n        <style>\n            :host{\n                --gap: var(--spacing-03, 0.5rem);\n                display: inline-flex;\n                flex-flow: row nowrap;\n                align-items: center;\n                color: var(--color-font, rgba(0,0,0,0.84));\n                font-family: var(--font-family-primary, 'Roboto'), sans-serif;\n                font-size: var(--font-size-logo, 1.25rem);\n                max-width: 160px;\n                max-height: var(--size-max-logo, 32px);\n                overflow: hidden;\n            }\n\n            :host, ::slotted(*), *{\n                box-sizing: border-box;\n            }\n\n            .logo-image{\n                display: inline-block;\n                height: var(--size-max-logo, 32px);\n            }\n\n            ::slotted([slot=\"image\"]){\n                height: 100%;\n                width: auto;\n            }\n\n            ::slotted([slot=\"text\"]){\n                display: inline-flex;\n                margin: auto 0;\n            }\n\n            .divider{\n                display: inline-block;\n                padding: 0 var(--gap);\n                margin-right: -2px; /* visual correction */\n            }\n\n        </style>\n        <span class=\"logo-image\">\n            <slot name=\"image\"></slot>\n        </span>\n        <span class=\"divider\">|</span>\n        <slot class=\"text\" name=\"text\"></slot>\n    `);\n\n    connectedCallback() {\n        this.hideDividerOnImageOnlyLogos();\n    }\n\n    hideDividerOnImageOnlyLogos(){\n        const slots = this.shadowRoot.querySelectorAll('slot');\n        const textSlot = slots[slots.length-1]?.assignedElements()[0];\n        if(textSlot?.textContent === undefined){\n            const divider = this.shadowRoot.querySelector('.divider');\n            divider.style.display = 'none';\n        }\n    }\n}","import createElement from './utils/createElement.mjs';\nimport getCSSVar from './utils/getCSSVar.mjs';\nimport ZHTMLElementInterface from './ZHTMLElementInterface.mjs';\n\nexport default class ZMenuBar extends ZHTMLElementInterface {\nstatic __n(){return \"ZMenuBar\"};\n\n\n    static TEMPLATE = createElement(`\n        <style>\n            :host{\n                position:relative;\n                display: flex;\n                flex-direction: column;\n                background-color: var(--color-menubar-background, rgb(235, 235, 235));\n                width: 15rem; /* 240px */\n                height: 100vh;\n                overflow-x: hidden;\n                overflow-y: hidden;\n                flex-shrink: 0;\n            }\n\n            * {\n                box-sizing: border-box;\n            }\n\n            .header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                background-color: transparent;\n                padding: var(--spacing-08, 2rem) var(--spacing-09, 2.5rem);\n                z-index: 2;\n            }\n\n            button#mobile-menu-toggle-btn {\n                /* reset default styles */\n                border: none;\n                background-color: transparent;\n                font-family: inherit;\n                padding: 0;\n                overflow: visible;\n                text-transform: none;\n                cursor: pointer;\n\n                /* add custom styles*/\n                display: none;\n            }\n\n            ::slotted([slot=\"logo\"]) {\n                min-height: var(--font-size-08, 2rem);\n                margin: auto 0;\n            }\n\n            ::slotted(a){\n                text-decoration: none;\n                color: inherit;\n            }\n\n            .body {\n                flex-grow: 1;\n                position: relative;\n                padding: 0 1rem 1rem;\n                background-color: transparent;\n                overflow-y: auto;\n            }\n\n            hr {\n                width: 50%;\n                border: 0;\n                background-color: var(--color-font);\n                height: 1px;\n            }\n\n            .footer {\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                width: inherit;\n                max-height: 100%;\n                z-index: 3;\n                overflow-y: auto;\n            }\n\n            .menu-item-container {\n                display: flex;\n                flex-direction: column;\n            }\n\n\n            /* --breakpoint-m */\n            @media (max-width: ${getCSSVar('--breakpoint-m') || '899px'}) {\n                :host{\n                    --header-height: calc(var(--font-size-08, 2rem) + var(--spacing-04, 0.75rem) * 2);\n                    width: 100%;\n                    background-color: transparent;\n                    height: var(--header-height);\n                    overflow-y: hidden;\n                    transition-delay: var(--transition-duration-01, 0.2s);\n                    transition-duration: 0s;\n                    transition-property: height, overflow-y;\n                }\n\n                :host([open]) {\n                    height: 100vh;\n                    overflow-y: auto;\n                    transition-delay: 0s;\n                    transition-duration: 0s;\n                    transition-property: height, overflow-y;\n                }\n\n                .header {\n                    background-color: var(--color-virtually-white, rgb(235, 235, 235));\n                    padding: var(--spacing-04, 0.75rem) var(--spacing-06, 1.25rem);\n                }\n\n                button#mobile-menu-toggle-btn {\n                    display: inline-block;\n                    min-width: var(--size-min-touch, 44px);\n                    min-height: var(--size-min-touch, 44px);\n                    margin: calc(var(--spacing-04, 0.75rem) * -1) 0; /* ignore padding of parent for correct positioning */\n                }\n\n                ::slotted([slot=\"logo\"]) {\n                    max-height: var(--font-size-08, 2rem);\n                }\n\n                .body {\n                    visibility: hidden;\n                    background-color: var(--color-menubar-body-background-mobile, #f8f8f8);\n                    padding: var(--spacing-04, 12px) 0;\n                    transform: translateX(100%);\n                    opacity: 0;\n                    max-height: calc(100vh - var(--header-height) - var(--size-height-min-button-profile-menu, 5rem));\n                    //transition: transform 0.2s ease-out, opacity 0.2s ease-out, visibility 0.2s ease-out;\n\n                    transition-duration: var(--transition-duration-01, 0.2s);\n                    transition-delay: 0s;\n                    transition-property: transform, opacity, visibility;\n                    transition-timing-function: ease-out;\n                }\n\n                :host([open]) .body{\n                    visibility: visible;\n                    opacity: 1;\n                    transform: translateX(0);\n                }\n\n                .footer {\n                    visibility: hidden;\n                    transform: translateX(100%);\n                    opacity: 0;\n                    max-height: calc(100vh - var(--header-height));\n                    transition: transform 0.2s ease-out, opacity 0.2s ease-out, visibility 0.2s ease-out;\n                }\n\n                :host([open]) .footer{\n                    visibility: visible;\n                    opacity: 1;\n                    transform: translateX(0);\n                    bottom: 0;\n                }\n\n                .menu-open-icon {\n                    display: inline-block;\n                    pointer-events: none;\n                }\n\n                .menu-close-icon {\n                    display: none;\n                    pointer-events: none;\n                }\n\n                :host([open]) .menu-open-icon {\n                    display: none;\n                }\n\n                :host([open]) .menu-close-icon {\n                    display: inline-block;\n                }\n            }\n\n        </style>\n        <div class=\"header\">\n            <slot name=\"logo\"></slot>\n            <button id=\"mobile-menu-toggle-btn\">\n                <z-icon icon=\"essential-menu\" class=\"menu-open-icon\"></z-icon>\n                <z-icon icon=\"essential-close\" class=\"menu-close-icon\"></z-icon>\n            </button>\n        </div>\n        <nav class=\"body\">\n            <div class=\"body__core\">\n                <slot class=\"menu-item-container\" name=\"menu-item-core\"></slot>\n            </div>\n            <hr>\n            <div class=\"body__apps\">\n                <slot class=\"menu-item-container\" name=\"menu-item-app\"></slot>\n            </div>\n        </nav>\n        <div class=\"footer\">\n            <slot name=\"settings\"></slot>\n        </div>\n    `);\n\n    /**\n     * Title text of the button to hide the mobile menu\n     * @type {string}\n     */\n    hideMenuText = 'Hide Menu';\n\n    /**\n     * Title text of the button to show the mobile menu\n     * @type {string}\n     */\n    showMenuText = 'Show Menu';\n\n    /**\n     *\n     * @returns {string[]}\n     */\n    static get observedAttributes() {\n        return ['open', 'titleshowmenu', 'titlehidemenu'];\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    get open() {\n        return this.hasAttribute('open');\n    }\n\n    /**\n     *\n     * @param {boolean} val\n     */\n    set open(val) {\n        if (val === true) {\n            this.setAttribute('open', '');\n        }\n        else {\n            this.removeAttribute('open');\n        }\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get titleHideMenu() {\n        return this.getAttribute('titleHideMenu') || 'Hide Menu';\n    }\n\n    /**\n     *\n     * @param {string} val\n     */\n    set titleHideMenu(val) {\n        this.setAttribute('titleHideMenu', val);\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get titleShowMenu() {\n        return this.getAttribute('titleShowMenu') || 'Show Menu';\n    }\n\n    /**\n     *\n     * @param {string} val\n     */\n    set titleShowMenu(val) {\n        this.setAttribute('titleShowMenu', val);\n    }\n\n    constructor() {\n        super();\n        this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {string|null} oldValue\n     * @param {string|null} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (newValue !== oldValue) {\n            switch (name.toLowerCase()) {\n                case 'titleshowmenu':\n                    this.showMenuText = newValue;\n                    this.updateButtonTitle();\n                    break;\n                case 'titlehidemenu':\n                    this.hideMenuText = newValue;\n                    this.updateButtonTitle();\n                    break;\n                case 'open':\n                    if(newValue === null){\n                        this.closeProfileMenu();\n                    }\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Lifecycle callback:\n     * Invoked each time the custom element is appended into a document-connected element.\n     */\n    connectedCallback() {\n        this.menuButton = this.shadowRoot.getElementById('mobile-menu-toggle-btn');\n\n        // get profileMenu from last slot\n        const slots = this.shadowRoot.querySelectorAll('slot');\n        this.profileMenu = slots[slots.length-1]?.assignedElements()[0];\n\n        ZMenuBar.observedAttributes.forEach((attr) => this.upgradeProperty(attr));\n        this.updateButtonTitle();\n        this.menuButton.addEventListener('click', this.toggleMobileMenu);\n    }\n\n    /**\n     * Lifecycle callback:\n     * Invoked each time the custom element is removed from a document-connected element.\n     */\n    disconnectedCallback() {\n        this.menuButton.removeEventListener('click', this.toggleMobileMenu);\n        this.menuButton = null;\n    }\n\n    /**\n     * Toggles open attribute\n     */\n    toggleMobileMenu() {\n        this.open = !this.open;\n        this.updateButtonTitle(this.open);\n    }\n\n    updateButtonTitle() {\n        if (this.menuButton !== undefined) {\n            this.menuButton.title = this.open ? this.hideMenuText : this.showMenuText;\n        }\n    }\n\n    closeProfileMenu() {\n        if(this.profileMenu !== undefined){\n            this.profileMenu.open = false;\n        }\n    }\n}","// Don't like IIFE? -> use as \"module\"\n\n// No SHADOW DOM - no scoped styles -> inline style tag works mostly - but is invalid HTML\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n    zep-h2 {\n        font-size: 1.5rem;\n        font-weight: 700;\n    }\n</style>\n`;\n\nexport default class ZepH2 extends HTMLElement {\n    constructor() {\n        super();\n        console.log('middle bäm! h2');\n\n        // use cloneNode technique instead of setting innerHTML directly, to cut down parse costs -> template is only parsed once and not for each instance!\n        this.appendChild(template.content.cloneNode(true));\n    }\n}\n\ncustomElements.define('zep-h2', ZepH2);\n\n\n\n","// Don't like IIFE? -> use as \"module\"\nexport default class ZepH3 extends HTMLElement {\n    constructor() {\n        super();\n        console.log('little bäm! h3');\n    }\n}\n\ncustomElements.define('zep-h3', ZepH3);\n\n\n\n","import Navigation from './js/navigation.mjs';\nimport {ZFileUpload, ZButton} from '@zepdev/web-components-library/dist/package/index.js';\nimport ZepH2 from './js/ZepH2.mjs';\nimport ZepH3 from './js/ZepH3.mjs';\n\nZFileUpload.register();\nZButton.register();\n\nwindow.addEventListener('DOMContentLoaded', Navigation.addListeners.bind(Navigation));\n"],"names":["Navigation","currentRoutesIndex","routes","indexOf","location","pathname","nextIndex","length","window","open","prevIndex","removeListeners","addEventListener","handleKeyDown","document","querySelectorAll","forEach","element","listener","event","callback","dataset","navigation","this","push","removeEventListener","e","defaultPrevented","key","prev","next","enumerable","configurable","writable","value","r","i","constructor","mode","customElements","upgradeProperty","a","getCSSVar","createElement","setFeatureRelatedCSSNoTouch","stripTags","connectedCallback","attributeChangedCallback","He","$","we","D","Ee","q","Te","U","Ae","Y","Me","ne","Ze","X","Se","C","he","G","Le","ae","Pe","R","fe","se","Ne","x","P","F","be","u","n","h","disconnectedCallback","o","console","detail","p","T","N","l","IDLE","SUCCESS","ERROR","ERROR_FILE_TYPE","ERROR_SIZE","me","Q","template","innerHTML","ZepH2","HTMLElement","super","log","appendChild","content","cloneNode","define","ZepH3","ZFileUpload","ZButton","addListeners","bind"],"sourceRoot":""}